[
  {
    "description": "generated number values",
    "tests": [
      {
        "description": "should handle minimum",
        "schema": {
          "type": "number",
          "minimum": 10
        },
        "valid": true
      },
      {
        "description": "should handle maximum",
        "schema": {
          "type": "number",
          "minimum": 20,
          "maximum": 30
        },
        "valid": true
      },
      {
        "description": "should handle multipleOf",
        "schema": {
          "type": "number",
          "minimum": 40,
          "maximum": 50,
          "multipleOf": 6
        },
        "valid": true
      },
      {
        "description": "should handle exclusiveMinimum",
        "schema": {
          "type": "number",
          "minimum": 60,
          "maximum": 70,
          "multipleOf": 7,
          "exclusiveMinimum": true
        },
        "valid": true
      },
      {
        "description": "should handle exclusiveMaximum",
        "schema": {
          "type": "number",
          "minimum": 80,
          "maximum": 90,
          "multipleOf": 8,
          "exclusiveMinimum": true,
          "exclusiveMaximum": true
        },
        "valid": true
      },
      {
        "description": "should validate numeric minimum",
        "schema": {
          "type": "object",
          "properties": {
            "test": {
              "type": "number",
              "minimum": []
            }
          }
        },
        "throws": "value .+? is not-a-number in \\/properties\\/test"
      },
      {
        "description": "should validate numeric maximum",
        "schema": {
          "type": "object",
          "properties": {
            "test": {
              "type": "number",
              "maximum": []
            }
          }
        },
        "throws": "value .+? is not-a-number in \\/properties\\/test"
      },
      {
        "description": "should validate between ranges",
        "schema": {
          "type": "object",
          "properties": {
            "test": {
              "type": "number",
              "minimum": 100,
              "maximum": 50
            }
          }
        },
        "throws": "invalid range between: 100, 50 in \\/properties\\/test"
      }
    ]
  }
]
